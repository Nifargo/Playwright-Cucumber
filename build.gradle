plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.freefair.lombok' version '8.1.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.20.1'

    testImplementation group: 'org.junit.platform', name: 'junit-platform-suite-engine', version: '1.8.0-M1'

    testImplementation group: 'io.cucumber', name: 'cucumber-junit-platform-engine', version: '7.20.1'

    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    testImplementation 'org.seleniumhq.selenium:selenium-java:4.24.0'
    testImplementation 'io.qameta.allure:allure-junit5:2.17.2'
    testImplementation 'io.qameta.allure:allure-java-commons:2.17.2'
    implementation('com.microsoft.playwright:playwright:1.37.0')
}

test {
    useJUnitPlatform()
    systemProperty "allure.results.directory", layout.buildDirectory.dir("allure-results").get().asFile
    maxParallelForks = Runtime.runtime.availableProcessors()
    systemProperty "cucumber.execution.parallel.enabled", 'true'


    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
    systemProperty 'env', System.getProperty('env', 'preprod')
}

tasks.register('pwServeTraces', JavaExec) {
    mainClass = 'com.microsoft.playwright.CLI'
    classpath = sourceSets.main.runtimeClasspath
    args 'show-trace', 'build/pw/' + System.getProperty("trace") + '.zip'
    systemProperties = System.getProperties() as Map<String, ?>
}

allure {
    version = '2.17.2'
}


